[project]
name = "stripe"
version = "13.0.1"
readme = "README.md"
description = "Python bindings for the Stripe API"
authors = [{ name = "Stripe", email = "support@stripe.com" }]
license-files = ["LICENSE"]
keywords = ["stripe", "api", "payments"]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
  "typing_extensions <= 4.2.0, > 3.7.2; python_version < '3.7'",
  # The best typing support comes from 4.5.0+ but we can support down to
  # 3.7.2 without throwing exceptions.
  "typing_extensions >= 4.5.0; python_version >= '3.7'",
  "requests >= 2.20; python_version >= '3.0'",
]

[project.optional-dependencies]
# `pip install stripe[async]` gets you everything + `httpx`, so our async stuff works out of the box
async = ["httpx"]

[project.urls]
homepage = "https://stripe.com/"
source = "https://github.com/stripe/stripe-python"
issues = "https://github.com/stripe/stripe-python/issues"
changelog = "https://github.com/stripe/stripe-python/blob/master/CHANGELOG.md"
documentation = "https://stripe.com/docs/api/?lang=python"

[build-system]
requires = ["flit_core >=3.11, <4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# see: https://github.com/stripe/stripe-python/issues/1616
include = ["tests/"]

[tool.ruff]
# same as our black config
line-length = 79
extend-exclude = ["build"]

[tool.ruff.format]
# currently the default value, but opt-out in the future
docstring-code-format = false

[tool.pyright]
include = [
  "stripe",
  "tests/test_generated_examples.py",
  "tests/test_exports.py",
  "tests/test_http_client.py",
  "tests/test_v2_event.py",
]
exclude = ["build", "**/__pycache__"]
reportMissingTypeArgument = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportUnnecessaryIsInstance = true
reportPrivateImportUsage = true
reportUnnecessaryTypeIgnoreComment = true

[tool.mypy]
follow_imports = "silent"
python_version = "3.10"
files = ["tests/test_generated_examples.py", "tests/test_exports.py"]
disallow_untyped_calls = true
disallow_untyped_defs = true
warn_unused_ignores = true
no_implicit_reexport = true

[tool.pytest.ini_options]
# use as many threads as available for tests
addopts = "-n auto"
# already the default, but will speed up searching a little, since this is the only place tests live
testpaths = "tests"
# these are warnings we show to users; we don't need them in our test logs
filterwarnings = [
  # single quotes so we don't have to re-backslack our backslashes
  'ignore:[\S\s]*stripe-python:DeprecationWarning',
  'ignore:[\S\s]*stripe\..* package:DeprecationWarning',
  'ignore:[\S\s]*RecipientTransfer:DeprecationWarning',
  'ignore:[\S\s]*`save` method is deprecated:DeprecationWarning',
]
